%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 452 355 742 426 
%%LanguageLevel: 2
%%Creator: CorelDRAW 10
%%Title: abovelogo.eps
%%CreationDate: Mon Jun 21 21:25:40 2004
%%For: Tom
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 10 Version 10.427
%Color profile: Deaktiviert
/CorelIsEPS true def
%%BeginResource: procset wCorel10Dict 10.0 0
/wCorel10Dict 300 dict def wCorel10Dict begin
% Copyright (c)1992-2000 Corel Corporation
% All rights reserved.     v10.0 r0.2
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel10Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
632.15376 368.22784 741.82904 425.83946 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
674.88350 423.44220 m
661.52268 380.14498 L
647.27631 423.44220 L
632.51263 423.44220 L
632.51263 425.83946 L
648.86995 425.83946 L
661.56350 388.57578 L
673.29014 425.83946 L
695.05398 425.83946 716.24580 425.83946 739.44567 425.83946 C
739.44567 423.45581 L
716.41446 423.45581 695.82898 423.44220 674.88350 423.44220 C
@c
689.17068 408.67852 m
689.96494 408.67852 L
689.96494 382.99153 L
692.36192 382.99153 L
692.36192 411.07550 L
689.24296 411.07550 690.51005 411.07550 687.25020 411.07550 C
674.24343 370.61121 L
649.11515 370.61121 L
634.97792 411.07550 L
632.15376 411.07550 L
647.11304 368.22756 L
676.24554 368.22756 L
689.17068 408.67852 L
@c
739.44567 411.07550 m
739.44567 408.69213 L
708.71924 408.69213 L
708.71924 402.05906 L
728.50876 402.05906 L
728.50876 392.00797 L
708.71924 392.00797 L
708.71924 385.38850 L
741.82904 385.38850 L
741.82904 382.99153 L
706.32227 382.99153 L
706.32227 394.32331 L
726.11178 394.32331 L
726.11178 399.67569 L
706.32227 399.67569 L
706.32227 411.07550 L
739.44567 411.07550 L
@c
741.82904 370.62482 m
741.82904 368.22756 L
689.96494 368.22756 L
689.96494 370.62482 L
741.82904 370.62482 L
@c
F

@rax %Note: Object
567.39940 368.22784 632.71843 425.92479 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
567.39940 397.08283 m
567.39940 406.00290 570.32872 413.03254 576.17263 418.19754 c
582.01682 423.34923 590.00315 425.92479 600.10271 425.92479 c
610.17307 425.92479 618.13020 423.34923 623.95965 418.19754 c
629.80384 413.03254 632.71843 406.00290 632.71843 397.08283 c
632.71843 388.17496 629.80384 381.14532 623.95965 375.98060 c
618.13020 370.81644 610.17307 368.22756 600.10271 368.22756 c
590.00315 368.22756 582.01682 370.81644 576.17263 375.98060 c
570.32872 381.14532 567.39940 388.17496 567.39940 397.08283 c
@c
586.82098 397.08340 m
586.82098 391.73754 587.88822 387.82885 590.03631 385.31934 c
592.18554 382.82258 595.54205 381.56769 600.10639 381.56769 c
604.63871 381.56769 607.96431 382.80926 610.08208 385.30602 c
612.19871 387.78973 613.25036 391.71118 613.25036 397.08340 c
613.25036 402.46923 612.19871 406.40343 610.08208 408.88715 c
607.96431 411.38362 604.63871 412.62548 600.10639 412.62548 c
595.54205 412.62548 592.18554 411.37087 590.03631 408.87383 c
587.88822 406.36460 586.82098 402.44315 586.82098 397.08340 c
@c
588.98721 397.08539 m
588.98721 392.48419 589.87899 389.12031 591.67587 386.96060 c
593.47247 384.81165 596.27877 383.73194 600.09477 383.73194 c
603.88498 383.73194 606.66463 384.80031 608.43487 386.94898 c
610.20539 389.08658 611.08413 392.46123 611.08413 397.08539 c
611.08413 401.72060 610.20539 405.10658 608.43487 407.24419 c
606.66463 409.39257 603.88498 410.46208 600.09477 410.46208 c
596.27877 410.46208 593.47247 409.38151 591.67587 407.23257 c
589.87899 405.07285 588.98721 401.69792 588.98721 397.08539 c
@c
569.98091 397.08198 m
569.98091 405.29764 572.67893 411.77112 578.06079 416.52794 c
583.44321 421.27257 590.79827 423.64431 600.09902 423.64431 c
609.37342 423.64431 616.70126 421.27257 622.07008 416.52794 c
627.45279 411.77112 630.13691 405.29764 630.13691 397.08198 c
630.13691 388.87880 627.45279 382.40447 622.07008 377.64794 c
616.70126 372.89225 609.37342 370.50803 600.09902 370.50803 c
590.79827 370.50803 583.44321 372.89225 578.06079 377.64794 c
572.67893 382.40447 569.98091 388.87880 569.98091 397.08198 c
@c
F

@rax %Note: Object
452.71587 368.22784 567.04365 425.83946 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
510.12680 423.45553 m
510.12680 425.83890 L
547.63569 425.83890 l
552.26636 425.41654 555.97096 424.27247 558.76309 422.42031 c
561.55521 420.55427 563.46180 418.75654 564.46980 417.02683 c
565.47780 415.29713 566.19950 413.18617 566.62157 410.68006 c
567.04394 408.18756 566.77153 405.45014 565.79074 402.50835 c
565.08435 400.40816 564.02674 398.58350 562.61877 397.03351 C
564.02646 395.48381 565.08435 393.65830 565.79046 391.55839 c
566.77124 388.61660 567.04365 385.87890 566.62129 383.38668 c
566.19921 380.88057 565.47751 378.76932 564.46951 377.03962 c
563.46151 375.30992 561.55493 373.51219 558.76280 371.64614 c
555.97068 369.79398 552.26608 368.64992 547.63569 368.22756 c
527.51027 368.22756 511.76806 368.22756 493.49339 368.22756 C
489.81600 378.60605 L
472.73669 378.60605 L
469.07320 368.22756 L
452.71559 368.22756 L
452.71559 370.62482 L
467.47956 370.62482 L
471.14306 381.00302 L
491.42296 381.00302 L
495.08674 370.62482 L
512.56970 370.62482 528.71102 370.61121 547.63569 370.61121 c
551.72126 370.99247 555.04460 372.02769 557.56431 373.73017 c
560.09764 375.43266 561.77291 377.01241 562.61707 378.45609 c
563.44791 379.89978 564.01994 381.73861 564.33317 383.94510 c
564.63307 386.15131 564.37087 388.46551 563.52983 390.89112 c
562.94476 392.57773 562.09833 394.11780 560.91175 395.42570 c
560.40435 395.98498 559.80454 396.49578 559.26709 397.03323 c
559.26709 397.03323 559.26652 397.03351 559.26680 397.03351 c
559.81474 397.56954 560.39414 398.07581 560.91175 398.64132 c
562.10400 399.94441 562.94504 401.48844 563.53011 403.17562 c
564.37115 405.60094 564.63335 407.91515 564.33345 410.12164 c
564.02022 412.32813 563.44847 414.16668 562.61764 415.61036 c
561.77320 417.05405 560.09792 418.63408 557.56460 420.33657 c
555.04488 422.03877 551.72154 423.07398 547.63569 423.45553 c
510.12680 423.45553 L
@c
509.37392 385.38850 m
510.12680 385.38850 L
510.12680 411.07550 L
512.52378 411.07550 L
512.52378 382.99153 L
510.19115 382.99153 509.88472 382.99153 507.45345 382.99153 C
494.44668 423.45581 L
469.31811 423.45581 L
455.18088 382.99153 L
452.71559 382.99153 L
452.71559 385.38850 L
453.19238 385.38850 L
467.31600 425.83946 L
496.44879 425.83946 L
509.37392 385.38850 L
@c
481.72592 413.92205 m
489.89764 390.25106 L
472.90025 390.25106 L
481.72592 413.92205 L
@c
476.65928 392.64803 m
486.15222 392.64803 L
481.76674 405.49124 L
476.65928 392.64803 L
@c
529.95713 381.58866 m
546.06926 381.58866 l
546.79124 381.58866 547.67650 382.01102 548.71143 382.84186 c
549.74665 383.68630 550.35950 385.41600 550.55027 388.05817 c
550.44113 390.79587 549.88299 392.51169 548.88860 393.20646 c
547.89449 393.88734 546.96813 394.24139 546.11008 394.24139 c
529.95713 394.24139 L
529.95713 381.58866 L
@c
532.42243 383.90400 m
532.42243 392.04850 L
544.76192 392.04850 l
545.40198 392.04850 546.11008 391.81720 546.88649 391.38123 c
547.67650 390.94554 548.09858 389.81509 548.15301 388.01735 c
548.01694 386.36929 547.54044 385.26605 546.73682 384.72123 c
545.91931 384.17641 545.25203 383.90400 544.72082 383.90400 c
532.42243 383.90400 L
@c
529.95713 412.47780 m
546.06954 412.47780 l
546.79124 412.47780 547.67650 412.05572 548.71172 411.22488 c
549.74693 410.38044 550.35978 408.65074 550.55055 406.00857 c
550.44142 403.27087 549.88299 401.55477 548.88888 400.86028 c
547.89449 400.17912 546.96841 399.82507 546.11036 399.82507 c
529.95713 399.82507 L
529.95713 412.47780 L
@c
532.42243 410.16246 m
532.42243 402.01795 L
544.76192 402.01795 l
545.40198 402.01795 546.11036 402.24954 546.88677 402.68523 c
547.67650 403.12091 548.09887 404.25137 548.15329 406.04939 c
548.01694 407.69745 547.54044 408.80041 546.73682 409.34523 c
545.91959 409.89005 545.25231 410.16246 544.72110 410.16246 c
532.42243 410.16246 L
@c
F

@rax 452.83266 355.43112 741.80551 366.00180 @E
[0.00016684 0.00000000 0.00000000 0.00016684 453.54653501 355.61620592] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_StarJedi 87612.00000 z
%CHAR: 0 0 (A) @t
32300 48084 m
23436 23611 L
40462 23611 L
32300 48084 L
@c
-4278 43383 m
-4278 61766 L
47573 61766 L
68235 0 L
44872 0 L
40988 11127 L
22633 11127 L
18734 0 L
-3417 0 L
10820 43383 L
-4278 43383 L
@c
F
%CHAR: 64804 0 (u) @t
85334 61766 m
85334 25247 l
85174 21071 85962 18179 87729 16559 c
89496 14923 92270 14062 96038 13945 c
99060 14003 101586 14894 103602 16602 c
105631 18311 106580 21188 106478 25247 c
106478 61766 L
126570 61766 L
126570 25539 l
126497 20399 125651 16310 124030 13244 c
122423 10178 120379 7608 117911 5563 c
115444 3504 112348 1913 108625 774 c
104916 -365 100769 -993 96198 -1110 c
92416 -1022 88547 -511 84634 453 c
80706 1402 77289 2906 74368 4965 c
71448 7009 69185 9652 67608 12879 c
66016 16106 65227 20311 65227 25495 c
65227 61766 L
85334 61766 L
@c
F
%CHAR: 127009 0 (t) @t
185870 61766 m
185870 43383 L
166274 43383 L
166274 0 L
146181 0 L
146181 43383 L
126586 43383 L
126586 61766 L
185870 61766 L
@c
F
%CHAR: 185446 0 (o) @t
256806 30547 m
256806 23787 255390 18019 252571 13259 c
249739 8498 245665 4921 240306 2526 c
234961 131 228580 -1066 221162 -1066 c
213745 -1066 207378 131 202063 2541 c
196748 4950 192718 8513 189987 13244 c
187242 17960 185869 23728 185869 30547 c
185869 35702 186658 40243 188220 44171 c
189797 48084 192090 51399 195113 54071 c
198135 56758 201844 58788 206239 60175 c
210634 61547 215599 62248 221162 62248 c
228551 62248 234932 61022 240291 58583 c
245650 56145 249739 52553 252571 47807 c
255390 43061 256806 37308 256806 30547 c
@c
207816 30372 m
207816 26415 208707 22954 210488 20019 c
212270 17084 215789 15610 221046 15610 c
225090 15610 228113 16383 230128 17931 c
232143 19464 233399 21231 233895 23203 c
234392 25188 234728 27583 234903 30372 c
234728 34344 233779 37790 232026 40754 c
230289 43704 226624 45179 221046 45179 c
212226 45179 207816 40243 207816 30372 c
@c
F
%CHAR: 257186 0 (n) @t
259756 0 m
259756 61766 L
279863 61766 L
298261 38666 L
298261 61766 L
318354 61766 L
318354 0 L
298261 0 L
279863 23100 L
279863 0 L
259756 0 L
@c
F
%CHAR: 318354 0 (o) @t
389714 30547 m
389714 23787 388298 18019 385479 13259 c
382647 8498 378573 4921 373214 2526 c
367869 131 361488 -1066 354070 -1066 c
346653 -1066 340286 131 334971 2541 c
329656 4950 325626 8513 322895 13244 c
320150 17960 318777 23728 318777 30547 c
318777 35702 319566 40243 321128 44171 c
322705 48084 324998 51399 328021 54071 c
331043 56758 334752 58788 339147 60175 c
343542 61547 348507 62248 354070 62248 c
361459 62248 367840 61022 373199 58583 c
378558 56145 382647 52553 385479 47807 c
388298 43061 389714 37308 389714 30547 c
@c
340724 30372 m
340724 26415 341615 22954 343396 20019 c
345178 17084 348697 15610 353954 15610 c
357998 15610 361021 16383 363036 17931 c
365051 19464 366307 21231 366803 23203 c
367300 25188 367636 27583 367811 30372 c
367636 34344 366687 37790 364934 40754 c
363197 43704 359532 45179 353954 45179 c
345134 45179 340724 40243 340724 30372 c
@c
F
%CHAR: 390094 0 (m) @t
391802 0 m
391802 61766 L
411909 61766 L
425431 36111 L
438865 61766 L
458972 61766 L
458972 0 L
438865 0 L
438865 25670 L
425942 0 L
424832 0 L
411909 25670 L
411909 0 L
391802 0 L
@c
F
%CHAR: 460680 0 (o) @t
532040 30547 m
532040 23787 530624 18019 527805 13259 c
524973 8498 520899 4921 515540 2526 c
510195 131 503814 -1066 496396 -1066 c
488979 -1066 482612 131 477297 2541 c
471982 4950 467952 8513 465221 13244 c
462476 17960 461103 23728 461103 30547 c
461103 35702 461892 40243 463454 44171 c
465031 48084 467324 51399 470347 54071 c
473369 56758 477078 58788 481473 60175 c
485868 61547 490833 62248 496396 62248 c
503785 62248 510166 61022 515525 58583 c
520884 56145 524973 52553 527805 47807 c
530624 43061 532040 37308 532040 30547 c
@c
483050 30372 m
483050 26415 483941 22954 485722 20019 c
487504 17084 491023 15610 496280 15610 c
500324 15610 503347 16383 505362 17931 c
507377 19464 508633 21231 509129 23203 c
509626 25188 509962 27583 510137 30372 c
509962 34344 509013 37790 507260 40754 c
505523 43704 501858 45179 496280 45179 c
487460 45179 483050 40243 483050 30372 c
@c
F
%CHAR: 532420 0 (u) @t
552950 61766 m
552950 25247 l
552790 21071 553578 18179 555345 16559 c
557112 14923 559886 14062 563654 13945 c
566676 14003 569202 14894 571218 16602 c
573247 18311 574196 21188 574094 25247 c
574094 61766 L
594186 61766 L
594186 25539 l
594113 20399 593267 16310 591646 13244 c
590039 10178 587995 7608 585527 5563 c
583060 3504 579964 1913 576241 774 c
572532 -365 568385 -993 563814 -1110 c
560032 -1022 556163 -511 552250 453 c
548322 1402 544905 2906 541984 4965 c
539064 7009 536801 9652 535224 12879 c
533632 16106 532843 20311 532843 25495 c
532843 61766 L
552950 61766 L
@c
F
%CHAR: 594625 0 (s) @t
645790 61766 m
612074 61766 l
604204 61766 599531 57955 598042 50304 c
596567 42667 600787 34285 610716 25159 c
616732 20414 615696 18165 607635 18399 c
594625 18399 L
594625 0 L
627479 0 l
636372 1489 640913 6045 641089 13697 c
641249 21334 636723 29204 627479 37308 c
622310 41586 623406 43602 630736 43383 c
645790 43383 L
645790 61766 L
@c
F
%CHAR: 683814 0 (B) @t
686384 0 m
686384 43383 L
673549 43383 L
673549 61766 L
728525 61766 l
735271 61723 740411 60540 743945 58262 c
747464 55984 749596 52158 750341 46799 c
750589 42696 749727 39469 747727 37133 c
745726 34797 742441 32869 737841 31350 C
737841 31190 L
740090 30898 742178 30299 744091 29365 c
746004 28445 747610 27350 748910 26079 c
750195 24809 751202 23378 751918 21772 c
752633 20180 752984 18603 752984 17070 c
752984 12193 751743 8498 749246 5987 c
746749 3475 743536 1840 739623 1066 c
735695 307 730949 -58 725357 0 c
686384 0 L
@c
707688 23918 m
707688 12485 L
721414 12485 l
723780 12412 725853 12923 727620 14033 c
729387 15142 730278 16515 730278 18136 c
730438 19932 729723 21348 728116 22370 c
726496 23407 724276 23918 721414 23918 c
707688 23918 L
@c
707688 46799 m
707688 37425 L
722655 37425 l
723488 37425 724349 37863 725269 38739 c
726174 39601 726671 40769 726715 42229 c
726612 43908 726058 45091 725079 45777 c
724086 46464 723269 46799 722612 46799 c
707688 46799 L
@c
F
%CHAR: 753466 0 (a) @t
750049 0 m
770361 61766 L
801039 61766 L
821701 0 L
798338 0 L
794454 11127 L
776099 11127 L
772200 0 L
750049 0 L
@c
785766 48084 m
776902 23611 L
793928 23611 L
785766 48084 L
@c
F
%CHAR: 818270 0 (t) @t
877131 61766 m
877131 43383 L
857535 43383 L
857535 0 L
837442 0 L
837442 43383 L
817847 43383 L
817847 61766 L
877131 61766 L
@c
F
%CHAR: 876707 0 (t) @t
935568 61766 m
935568 43383 L
915972 43383 L
915972 0 L
895879 0 L
895879 43383 L
876284 43383 L
876284 61766 L
935568 61766 L
@c
F
%CHAR: 935144 0 (l) @t
937714 0 m
937714 61766 L
957821 61766 L
957821 18399 L
991274 18399 L
991274 0 L
937714 0 L
@c
F
%CHAR: 991274 0 (e) @t
993844 0 m
993844 61766 L
1046805 61766 L
1046805 43383 L
1013951 43383 L
1013951 36271 L
1035168 36271 L
1035168 25495 L
1013951 25495 L
1013951 18399 L
1052018 18399 L
1052018 0 L
993844 0 L
@c
F
%CHAR: 1090085 0 (o) @t
1161445 30547 m
1161445 23787 1160029 18019 1157210 13259 c
1154378 8498 1150304 4921 1144945 2526 c
1139600 131 1133219 -1066 1125801 -1066 c
1118384 -1066 1112017 131 1106702 2541 c
1101387 4950 1097357 8513 1094626 13244 c
1091881 17960 1090508 23728 1090508 30547 c
1090508 35702 1091297 40243 1092859 44171 c
1094436 48084 1096729 51399 1099752 54071 c
1102774 56758 1106483 58788 1110878 60175 c
1115273 61547 1120238 62248 1125801 62248 c
1133190 62248 1139571 61022 1144930 58583 c
1150289 56145 1154378 52553 1157210 47807 c
1160029 43061 1161445 37308 1161445 30547 c
@c
1112455 30372 m
1112455 26415 1113346 22954 1115127 20019 c
1116909 17084 1120428 15610 1125685 15610 c
1129729 15610 1132752 16383 1134767 17931 c
1136782 19464 1138038 21231 1138534 23203 c
1139031 25188 1139367 27583 1139542 30372 c
1139367 34344 1138418 37790 1136665 40754 c
1134928 43704 1131263 45179 1125685 45179 c
1116865 45179 1112455 40243 1112455 30372 c
@c
F
%CHAR: 1161825 0 (v) @t
1158408 61766 m
1180136 0 L
1212947 0 L
1234981 61766 L
1210201 61766 L
1196008 14325 L
1181976 61766 L
1158408 61766 L
@c
F
%CHAR: 1231550 0 (E) @t
1234120 0 m
1234120 43383 L
1221285 43383 L
1221285 61766 L
1287081 61766 L
1287081 43383 L
1254227 43383 L
1254227 36271 L
1275444 36271 L
1275444 25495 L
1254227 25495 L
1254227 18399 L
1292294 18399 L
1292294 0 L
1234120 0 L
@c
F
%CHAR: 1289724 0 (R) @t
1292294 0 m
1292294 61766 L
1332508 61766 l
1337473 61314 1341546 60000 1344744 57839 c
1347928 55677 1350264 52757 1351753 49107 c
1352892 43631 1352951 39411 1351929 36447 c
1350892 33482 1349096 31000 1346540 29000 c
1343970 27014 1340291 25437 1335501 24298 C
1340116 18399 L
1373145 18399 L
1373145 0 L
1334216 0 L
1314620 20399 L
1314620 0 L
1292294 0 L
@c
1314620 46376 m
1314620 34986 L
1330186 34986 l
1331018 34986 1331924 35293 1332888 35906 c
1333851 36520 1334377 38067 1334435 40550 c
1334289 42915 1333705 44478 1332698 45237 c
1331690 45996 1330829 46376 1330157 46376 c
1314620 46376 L
@c
F
%CHAR: 1396669 0 (E) @t
1399239 0 m
1399239 43383 L
1386404 43383 L
1386404 61766 L
1452200 61766 L
1452200 43383 L
1419346 43383 L
1419346 36271 L
1440563 36271 L
1440563 25495 L
1419346 25495 L
1419346 18399 L
1457413 18399 L
1457413 0 L
1399239 0 L
@c
F
%CHAR: 1454843 0 (n) @t
1457413 0 m
1457413 61766 L
1477520 61766 L
1495918 38666 L
1495918 61766 L
1516011 61766 L
1516011 0 L
1495918 0 L
1477520 23100 L
1477520 0 L
1457413 0 L
@c
F
%CHAR: 1516011 0 (d) @t
1518581 0 m
1518581 61766 L
1555028 61766 l
1559963 61766 1564314 61124 1568067 59810 c
1571834 58496 1575018 56729 1577617 54495 c
1580201 52275 1582362 49267 1584100 45471 c
1585823 41674 1586685 36753 1586685 30679 c
1586363 25057 1585429 20282 1583852 16340 c
1582289 12412 1580201 9301 1577617 7009 c
1575018 4731 1571849 2964 1568096 1708 c
1564344 453 1559642 -117 1554005 0 c
1518581 0 L
@c
1539199 46464 m
1539199 15405 L
1550968 15405 l
1553611 15405 1555758 15960 1557378 17084 c
1558999 18223 1560328 19654 1561350 21407 c
1562387 23159 1563044 26327 1563321 30883 c
1563234 35045 1562664 38126 1561598 40112 c
1560518 42083 1559145 43645 1557466 44770 c
1555787 45894 1553582 46464 1550881 46464 c
1539199 46464 L
@c
F
%CHAR: 1587108 0 (o) @t
1658468 30547 m
1658468 23787 1657052 18019 1654233 13259 c
1651401 8498 1647327 4921 1641968 2526 c
1636623 131 1630242 -1066 1622824 -1066 c
1615407 -1066 1609040 131 1603725 2541 c
1598410 4950 1594380 8513 1591649 13244 c
1588904 17960 1587531 23728 1587531 30547 c
1587531 35702 1588320 40243 1589882 44171 c
1591459 48084 1593752 51399 1596775 54071 c
1599797 56758 1603506 58788 1607901 60175 c
1612296 61547 1617261 62248 1622824 62248 c
1630213 62248 1636594 61022 1641953 58583 c
1647312 56145 1651401 52553 1654233 47807 c
1657052 43061 1658468 37308 1658468 30547 c
@c
1609478 30372 m
1609478 26415 1610369 22954 1612150 20019 c
1613932 17084 1617451 15610 1622708 15610 c
1626752 15610 1629775 16383 1631790 17931 c
1633805 19464 1635061 21231 1635557 23203 c
1636054 25188 1636390 27583 1636565 30372 c
1636390 34344 1635441 37790 1633688 40754 c
1631951 43704 1628286 45179 1622708 45179 c
1613888 45179 1609478 40243 1609478 30372 c
@c
F
%CHAR: 1658848 0 (r) @t
1661418 0 m
1661418 61766 L
1701632 61766 l
1706597 61314 1710670 60000 1713868 57839 c
1717052 55677 1719388 52757 1720877 49107 c
1722016 43631 1722075 39411 1721053 36447 c
1720016 33482 1718220 31000 1715664 29000 c
1713094 27014 1709415 25437 1704625 24298 C
1709240 18399 L
1727726 18399 L
1727726 0 L
1703340 0 L
1683744 20399 L
1683744 0 L
1661418 0 L
@c
1683744 46376 m
1683744 34986 L
1699310 34986 l
1700142 34986 1701048 35293 1702012 35906 c
1702975 36520 1703501 38067 1703559 40550 c
1703413 42915 1702829 44478 1701822 45237 c
1700814 45996 1699953 46376 1699281 46376 c
1683744 46376 L
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel10Dict 10.0 0
%%EOF
